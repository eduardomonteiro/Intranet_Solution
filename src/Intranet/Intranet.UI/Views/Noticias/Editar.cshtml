@model Intranet.Data.Entities.Noticia
<section class="content-internas">
    <div class="info-interna">
        <form class="formulario-base" method="post" action="@Url.Action("Editar", "Noticias")" enctype="multipart/form-data">
            @Html.HiddenFor(n => n.Id)
            @Html.HiddenFor(n => n.Imagem)
            @Html.HiddenFor(n => n.Arquivo)
            <div class="container">
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Titulo)
                    </div>
                    <div class="col l9 m8 s12">
                        @Html.TextBoxFor(m => m.Titulo)
                        @Html.ValidationMessageFor(m => m.Titulo)
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.IdCategoria)
                    </div>
                    <div class="col l9 m8 s12">
                        @Html.DropDownListFor(m => m.IdCategoria, new SelectList(ViewBag.Categorias, "Id", "Nome"), "Selecione")
                        @Html.ValidationMessageFor(m => m.IdCategoria)
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Texto)
                    </div>
                    <div class="col l9 m8 s12">
                        @Html.TextAreaFor(m => m.Texto)
                        @Html.ValidationMessageFor(m => m.Texto)
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Imagem)
                    </div>
                    <div class="col l9 m8 s12">
                        @if (!string.IsNullOrEmpty(Model.Imagem))
                        {
                            <div class="legenda"><strong>Atual:</strong> <a target="_blank" href="/Content/Noticias/@Model.Imagem">@Model.Imagem</a></div>
                        }
                        <input type="file" name="Foto" id="Foto" value="" accept=".jpg,.jpeg,.png,.gif" />
                        @Html.ValidationMessageFor(m => m.Imagem)
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        <label for="Destaque">
                            Destaque
                        </label>
                    </div>
                    <div class="col l9 m8 s12">
                        <div class="list-check">
                            <div class="col l6 m12 s12">
                                <div class="item">
                                    <label for="Destaque">
                                        @Html.CheckBoxFor(m => m.Destaque) DEFINIR COMO DESTAQUE NA TELA INICIAL
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Arquivo)
                    </div>
                    <div class="col l9 m8 s12">
                        @if (!string.IsNullOrEmpty(Model.Arquivo))
                        {
                            <div class="legenda"><strong>Atual:</strong> <a target="_blank" href="/Content/Noticias/@Model.Arquivo">@Model.Arquivo</a></div>
                        }
                        <input type="file" name="File" id="File" value="" accept=".jpg,.jpeg,.png,.gif,.pdf,.doc,.docx,.txt,.odt,.rtf,.xls,.xlsx,.ai,.eps" />
                        @Html.ValidationMessageFor(m => m.Arquivo)
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Data)
                    </div>
                    <div class="col l9 m8 s12">
                        @Html.TextBoxFor(m => m.Data, new { type = "text", @class = "data" })
                        @Html.ValidationMessageFor(m => m.Data)
                    </div>
                </div>
                <div class="list-botoes">
                    <button class="btn-form red" type="submit">
                        <i class="fa fa-floppy-o" aria-hidden="true"></i>Salvar
                    </button>
                    <button class="btn-form" type="reset">
                        <i class="fa fa-times" aria-hidden="true"></i>Cancelar
                    </button>
                </div>
            </div>
        </form>
    </div>
</section>
@section scripts
{
    <script type="text/javascript" src="~/libs/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/libs/ckeditor/sample.js"></script>
    <script>
        initSample("Texto");

        $("#Foto").change(function () {
            var fileExtension = [
                'jpg', 'jpeg', 'png', 'gif'
            ];
            var arquivos = $("#Foto")[0].files;
            $.map(arquivos, function (val) {
                if ($.inArray(val.name.split('.').pop().toLowerCase(), fileExtension) == -1) {
                    swal('Oops...', 'São permitidos apenas os formatos: ' + fileExtension.join(', '), 'error');
                    $("#Foto").val('');
                }
            });
        });

        $("#File").change(function () {
            var fileExtension = [
                'jpg', 'jpeg', 'png', 'gif', 'pdf', 'doc', 'docx', 'txt', 'odt', 'rtf', 'xls', 'xlsx', 'ai', 'eps'
            ];
            var arquivos = $("#File")[0].files;
            $.map(arquivos, function (val) {
                if ($.inArray(val.name.split('.').pop().toLowerCase(), fileExtension) == -1) {
                    swal('Oops...', 'São permitidos apenas os formatos: ' + fileExtension.join(', '), 'error');
                    $("#File").val('');
                }
            });
        });
    </script>
}