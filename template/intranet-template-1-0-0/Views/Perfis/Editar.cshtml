@using $safeprojectname$.Models
@using $safeprojectname$.Util
@model GroupViewModel
<section>
    <div class="info-interna">
        <form class="formulario-base" method="post" action="@Url.Action("Edit", "Perfis")">
            @Html.HiddenFor(m=>m.Id)
            <div class="container">
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Name)
                    </div>
                    <div class="col l9 m8 s12">
                        @Html.TextBoxFor(m => m.Name)
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
                <div class="row">
                    <div class="col l3 m4 s12">
                        @Html.LabelFor(m => m.Description)
                    </div>
                    <div class="col l9 m8 s12">
                        @Html.TextAreaFor(m => m.Description)
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                </div>
                <!-- Selecione as Permissôes -->
                <div class="row">
                    <div class="col l3 m4 s12">
                        <label for="gerenciarperfil-descricao">
                            Selecione as Permissôes:
                        </label>
                    </div>
                    <div class="col l9 m8 s12 blocopermisoes">
                        <div class="row">
                            <div class="col l4 s12">
                                <div class="ptitle">
                                    <p>permissão</p>
                                </div>
                            </div>
                            <div class="col l4 s12">
                                <div class="ptitle">
                                    <p>Visualizar</p>
                                </div>
                            </div>
                            <div class="col l4 s12">
                                <div class="ptitle">
                                    <p>Administrar <span>(Cadastrar, Editar e Excluir)</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                        @foreach (AreasEnum area in Enum.GetValues(typeof(AreasEnum)))
                        {
                            <div class="row list-check">
                                <div class="col l4 s12">
                                    <p>@Html.EnumDisplayNameFor(area)</p>
                                </div>
                                <div class="col l4 s12">
                                    <div class="item">
                                        <label>
                                            <input type="checkbox" name="SelectedRoles" value="@area.ToString()"> Visualizar
                                        </label>
                                    </div>
                                </div>
                                <div class="col l4 s12">
                                    <div class="item">
                                        <label>
                                            <input type="checkbox" name="SelectedRoles" value="@(area + "-Admin")"> Administrar
                                        </label>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="list-botoes">
                    <button class="btn-form red" type="submit">
                        <i class="fa fa-floppy-o" aria-hidden="true"></i>Salvar
                    </button>
                    <button class="btn-form" type="reset">
                        <i class="fa fa-times" aria-hidden="true"></i>Cancelar
                    </button>
                </div>
            </div>
        </form>
    </div>
</section>
@section scripts
{
    <script>
        @foreach (var role in Model.RolesList.ToList())
        {
            <text>$("input[type='checkbox'][value='@role.Text']").prop('checked', true);</text>
            @*<text>$("input[type='checkbox'][value='@role.Text']").parent().parent().addClass('ativo');</text>*@
        }

        $("input[type='checkbox']").change(function () {
            var role = $(this).val();
            if (role.indexOf("Admin") > 0) {
                if (this.checked) {
                    $("input[type='checkbox'][value='" + role.replace("-Admin", "") + "']").prop('checked', true);
                    $("input[type='checkbox'][value='" + role.replace("-Admin", "") + "']").parent().parent().addClass('ativo');
                }
            }
        });
    </script>
}
